{"ast":null,"code":"var _jsxFileName = \"/Users/james/projects/immersivelabs/hackerthon/app/src/models/team/TeamList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withLayout from \"components/withLayout\";\nimport { Spinner } from \"../../mate\";\nimport { GET_TEAMS } from \"./queries\";\n\nconst TeamList = () => {\n  const _useQuery = useQuery(GET_TEAMS),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n  if (error) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Error: \".concat(error));\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, data.teams.map(team => React.createElement(\"li\", {\n    key: team.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/teams/\".concat(team.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, team.name))));\n};\n\nexport default withLayout(TeamList);","map":{"version":3,"sources":["/Users/james/projects/immersivelabs/hackerthon/app/src/models/team/TeamList.js"],"names":["React","Link","useQuery","withLayout","Spinner","GET_TEAMS","TeamList","data","loading","error","teams","map","team","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACYJ,QAAQ,CAACG,SAAD,CADpB;AAAA,QACbE,IADa,aACbA,IADa;AAAA,QACPC,OADO,aACPA,OADO;AAAA,QACEC,KADF,aACEA,KADF;;AAGrB,MAAID,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAeA,KAAf,EAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,IAAI,CAACE,IAArC,CADF,CADD,CADH,CADF;AASD,CAfD;;AAiBA,eAAeX,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport withLayout from \"components/withLayout\";\nimport { Spinner } from \"../../mate\";\n\nimport { GET_TEAMS } from \"./queries\";\n\nconst TeamList = () => {\n  const { data, loading, error } = useQuery(GET_TEAMS);\n\n  if (loading) return <Spinner />;\n  if (error) return <h2>{`Error: ${error}`}</h2>;\n\n  return (\n    <ul>\n      {data.teams.map(team => (\n        <li key={team.id}>\n          <Link to={`/teams/${team.id}`}>{team.name}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default withLayout(TeamList);\n"]},"metadata":{},"sourceType":"module"}