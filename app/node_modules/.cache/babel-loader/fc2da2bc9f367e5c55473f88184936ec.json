{"ast":null,"code":"var _jsxFileName = \"/Users/james/projects/immersivelabs/hackerthon/app/src/models/team/Team.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_TEAM } from \"./queries\";\n\nconst TeamList = ({\n  id\n}) => {\n  const _useQuery = useQuery(GET_TEAM, {\n    variables: {\n      id\n    }\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  console.log(error);\n  if (loading) return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Error: \".concat(error));\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, data.teams.map(team => React.createElement(\"li\", {\n    key: team.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/teams/\".concat(team.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, team.name))));\n};\n\nexport default TeamList;","map":{"version":3,"sources":["/Users/james/projects/immersivelabs/hackerthon/app/src/models/team/Team.js"],"names":["React","Link","useQuery","GET_TEAM","TeamList","id","variables","data","loading","error","console","log","teams","map","team","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA,oBACMH,QAAQ,CAACC,QAAD,EAAW;AAClDG,IAAAA,SAAS,EAAE;AACTD,MAAAA;AADS;AADuC,GAAX,CADd;AAAA,QACnBE,IADmB,aACnBA,IADmB;AAAA,QACbC,OADa,aACbA,OADa;AAAA,QACJC,KADI,aACJA,KADI;;AAO3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAeA,KAAf,EAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,mBAAYS,IAAI,CAACT,EAAjB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCS,IAAI,CAACC,IAArC,CADF,CADD,CADH,CADF;AASD,CArBD;;AAuBA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_TEAM } from \"./queries\";\n\nconst TeamList = ({ id }) => {\n  const { data, loading, error } = useQuery(GET_TEAM, {\n    variables: {\n      id,\n    },\n  });\n\n  console.log(error);\n\n  if (loading) return <h3>Loading...</h3>;\n  if (error) return <h2>{`Error: ${error}`}</h2>;\n\n  return (\n    <ul>\n      {data.teams.map(team => (\n        <li key={team.id}>\n          <Link to={`/teams/${team.id}`}>{team.name}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TeamList;\n"]},"metadata":{},"sourceType":"module"}